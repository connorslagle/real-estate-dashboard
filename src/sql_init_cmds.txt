SQL setup:
- dbname: realtor_api_listings
- postgres usr: postgres
- postgres pw: password

SQL Schema:
- Search Table (listing_query)
    - listing_query_id, serial, PK
    - city, varchar(20)
    - state, varchar(2)
    - property_status, varchar(15)
    - query_date, timestamp
    - query_sort, varchar(15)

CREATE TABLE LISTING_QUERY(
    LISTING_QUERY_ID INT GENERATED ALWAYS AS IDENTITY,
    CITY VARCHAR(20) NOT NULL,
    STATE VARCHAR(2) NOT NULL,
    PROPERTY_STATUS VARCHAR(15) NOT NULL,
    QUERY_DATE TIMESTAMP NOT NULL,
    QUERY_SORT VARCHAR(15) NOT NULL,
    PRIMARY KEY(LISTING_QUERY_ID)
);

- Listings Table (listing_data)
    - listing_id, serial, PK
    - query_id, int, FK
    - page, int
    - page_rank, int
    - last_update, timestamp
    - listing_price, int
    - property_type, varchar(20)
    - realtor_listing_id, int
    - mls_id, int
    - property_id, VARCHAR(15)
    - city, varchar(20)
    - state, varchar(2)
    - county, varchar(20)
    - zipcode, int
    - neighborhood, varchar(20)
    - address_line, varchar(30)
    - lat, numeric(8,5)
    - long, numeric(8,5)
    - baths, numeric(3,1)
    - beds, int
    - building_size, int
    - building_units, varchar(10)
    - lot_size, int
    - lot_units, varchar(10)

CREATE TABLE LISTING(
    LISTING_ID INT GENERATED ALWAYS AS IDENTITY,
    LISTING_QUERY_ID INT NOT NULL,
    PAGE INT NOT NULL,
    PAGE_RANK INT NOT NULL,
    LAST_UPDATE TIMESTAMP NOT NULL,
    LISTING_PRICE INT NOT NULL,
    PROPERTY_TYPE VARCHAR(20) NOT NULL,
    REALTOR_LISTING_ID INT NOT NULL,
    MLS_ID INT NOT NULL,
    PROPERTY_ID VARCHAR(15) NOT NULL,
    CITY VARCHAR(20) NOT NULL,
    STATE VARCHAR(2) NOT NULL,
    COUNTY VARCHAR(20) NOT NULL,
    ZIPCODE INT NOT NULL,
    NEIGHBORHOOD VARCHAR(20) NOT NULL,
    ADDRESS_LINE VARCHAR(30) NOT NULL,
    LAT NUMERIC(8,5) NOT NULL,
    LONG NUMERIC(8,5) NOT NULL,
    BATHS NUMERIC(3,1) NOT NULL,
    BEDS INT NOT NULL,
    BUILDING_SIZE INT NOT NULL,
    BUILDING_UNITS VARCHAR(10) NOT NULL,
    LOT_SIZE INT NOT NULL,
    LOT_UNITS VARCHAR(10) NOT NULL,
    PRIMARY KEY(LISTING_ID),
    CONSTRAINT FK_QUERY
        FOREIGN KEY(LISTING_QUERY_ID)
            REFERENCES LISTING_QUERY(LISTING_QUERY_ID)
);

- details query, meta
    - 


- Photo Table (listing_images)
    - photo_id, serial, PK
    - query_id, int, FK
    - listing_id, int, FK
    - photo_href, varchar(100)
    - tag_1_label, varchar(15)
    - tag_1_proba, numeric(5,4)
    - tag_2_label, varchar(20)
    - tag_2_proba, numeric(5,4)
    - tag_3_label, varchar(15)
    - tag_3_proba, numeric(5,4)
    - S3_location, varchar(50)
    - (from detailsAPI query)
    - 

CREATE TABLE IMAGES(
    IMAGE_ID INT GENERATED ALWAYS AS IDENTITY,
    LISTING_QUERY_ID INT NOT NULL,
    DETAILS_QUERY_ID INT NOT NULL,
    LISTING_ID INT NOT NULL,
    IMAGE_HREF VARCHAR(100) NOT NULL,

    PRIMARY KEY(IMAGE_ID),
    CONSTRAINT FK_QUERY
        FOREIGN KEY(QUERY_ID)
            REFERENCES QUERY(QUERY_ID)
);